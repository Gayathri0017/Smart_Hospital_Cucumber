<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-24T12:40:20 IST" name="Default suite" finished-at="2025-04-24T12:40:51 IST" duration-ms="30868">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.RunnerClass@306cf3ea]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-04-24T12:40:20 IST" name="Default test" finished-at="2025-04-24T12:40:51 IST" duration-ms="30868">
      <class name="com.runner.RunnerClass">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.runner.RunnerClass@306cf3ea]" started-at="2025-04-24T12:40:20 IST" name="setUpClass" finished-at="2025-04-24T12:40:20 IST" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6f3f0ae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.RunnerClass@306cf3ea]" started-at="2025-04-24T12:40:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-24T12:40:49 IST" duration-ms="28538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Doctor creates a new appointment for a new patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Gayathri_09APR2025_Manage Appointments in Smart Hospital"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.RunnerClass@306cf3ea]" started-at="2025-04-24T12:40:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-24T12:40:46 IST" duration-ms="26148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Doctor tries to add a new patient without entering the Month"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Gayathri_09APR2025_Manage Appointments in Smart Hospital"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.RunnerClass@306cf3ea]" started-at="2025-04-24T12:40:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-24T12:40:41 IST" duration-ms="20749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Doctor tries to add a new patient without entering the day"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Gayathri_09APR2025_Manage Appointments in Smart Hospital"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.RunnerClass@306cf3ea]" started-at="2025-04-24T12:40:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-24T12:40:43 IST" duration-ms="22893" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Doctor tries to create an appointment with an expired time slot"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Gayathri_09APR2025_Manage Appointments in Smart Hospital"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <input type="text" id="datetimepicker" name="date" class="form-control datetime"> is not clickable at point (1444, 154). Other element would receive the click: <input type="text" name="guardian_name" placeholder="" value="" class="form-control">
  (Session info: chrome=135.0.7049.96)
Build info: version: '4.31.0', revision: '1ef9f18787*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [73dd0694467f9b82835fe60a96e4fd3a, clickElement {id=f.98869E5945512A7F1AAEF56977E85C83.d.A7007107AB75643330D9D12753BF7395.e.197}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.96, chrome: {chromedriverVersion: 135.0.7049.114 (63fd8a7d9d0..., userDataDir: C:\Users\gayat\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60570}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60570/devtoo..., se:cdpVersion: 135.0.7049.96, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (73dd0694467f9b82835fe60a96e4fd3a)] -> xpath: //input[@id="datetimepicker"]]
Session ID: 73dd0694467f9b82835fe60a96e4fd3a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <input type="text" id="datetimepicker" name="date" class="form-control datetime"> is not clickable at point (1444, 154). Other element would receive the click: <input type="text" name="guardian_name" placeholder="" value="" class="form-control">
  (Session info: chrome=135.0.7049.96)
Build info: version: '4.31.0', revision: '1ef9f18787*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [73dd0694467f9b82835fe60a96e4fd3a, clickElement {id=f.98869E5945512A7F1AAEF56977E85C83.d.A7007107AB75643330D9D12753BF7395.e.197}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.96, chrome: {chromedriverVersion: 135.0.7049.114 (63fd8a7d9d0..., userDataDir: C:\Users\gayat\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60570}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60570/devtoo..., se:cdpVersion: 135.0.7049.96, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (73dd0694467f9b82835fe60a96e4fd3a)] -> xpath: //input[@id="datetimepicker"]]
Session ID: 73dd0694467f9b82835fe60a96e4fd3a
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy26.click(Unknown Source)
at com.actions.DoctorActions.addAppointmentDetails1(DoctorActions.java:119)
at com.definitions.DoctorDefinition.doctor_fills_expired_time_for_appointment(DoctorDefinition.java:62)
at âœ½.Doctor fills Expired time for appointment(file:///C:/Users/gayat/git/Smart_Hospital_Cucumber/SmartHospitals_Cucumber/src/test/resources/Features/DoctorFeature.feature:21)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.RunnerClass@306cf3ea]" started-at="2025-04-24T12:40:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-24T12:40:42 IST" duration-ms="21324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Doctor tries to add a new patient without entering the year"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Gayathri_09APR2025_Manage Appointments in Smart Hospital"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.RunnerClass@306cf3ea]" started-at="2025-04-24T12:40:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-04-24T12:40:45 IST" duration-ms="25024" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Doctor tries to add a new patient without entering the name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Gayathri_09APR2025_Manage Appointments in Smart Hospital"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.runner.RunnerClass@306cf3ea]" started-at="2025-04-24T12:40:49 IST" name="tearDownClass" finished-at="2025-04-24T12:40:51 IST" duration-ms="1889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.runner.RunnerClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
